{"ts":1363707208697,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/**\n * Created with JetBrains WebStorm.\n * Date: 2013-03-19\n * Time: 10:49 AM\n * @author Adam C. Nowak\n * @description\n */\n\"use strict\";\n\n//Required Modules\nvar routing_validation = require('../../libs/utils/routing/routing_validation.js');\n\n//Include npm modules\nvar _ = require(\"underscore\");\n\nmodule.exports = function(app) {\n    /**\n     * Add the Cross-Origin Resource Sharing (CORS) Header to the response.\n     * Enable calling the service from a different domain.\n     */\n    app.all('/*', function(req, res, next) {\n        //Working towards CORS Compliance\n        res.header(\"Access-Control-Allow-Origin\", \"*\");\n        res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE,OPTIONS');\n//        res.header(\"Access-Control-Allow-Headers\", \"X-Requested-With\");\n        res.header(\"Access-Control-Allow-Headers\", \"X-Requested-With,Content-Type,Content-Length,Accept,Origin\");\n\n        var validation;\n\n        if (req.method == \"OPTIONS\"){\n            dex.log(\"OPTIONS Called!\");\n            //Respond with an OK (200)\n            res.send(200);\n        } else if (_.isEqual(req.method, \"GET\")) {\n            //Verify headers for GET request\n            validation = Object.create(routing_validation);\n            if (validation.verifyGETRequest(req, res)) {\n                next();\n            }\n        } else if (_.isEqual(req.method, \"PUT\")) {\n            //Verify headers for PUT request\n            validation = Object.create(routing_validation);\n            if (validation.verifyPUTRequest(req, res)) {\n                next();\n            }\n        } else if (_.isEqual(req.method, \"POST\")) {\n            //Verify headers for POST request\n            validation = Object.create(routing_validation);\n            if (validation.verifyPOSTRequest(req, res)) {\n                next();\n            }\n        } else if (_.isEqual(req.method, \"DELETE\")) {\n            //Verify headers for DELETE request\n            validation = Object.create(routing_validation);\n            if (validation.verifyDELETERequest(req, res)) {\n                next();\n            }\n        } else {\n            next();\n        }\n\n    });//END app.all\n\n};"]],"start1":0,"start2":0,"length1":0,"length2":2152}]],"length":2152}
